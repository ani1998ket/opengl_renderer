#include "Model.hpp"
#include "Shapes.hpp"

Triangle::Triangle()
{
    positions = {
        -0.5, -0.5, 0.0,
        0.5, -0.5, 0.0,
        0.0, 0.5, 0.0
    };

    init();
}

Square::Square()
{
    positions = {
        -0.5, -0.5, 0.0,
        0.5, -0.5, 0.0,
        0.5, 0.5, 0.0,

        -0.5, -0.5, 0.0,
        0.5, 0.5, 0.0,
        -0.5, 0.5, 0.0};
    init();
}

Cube::Cube()
{
    positions = {
        -0.5, -0.5, -0.5,
         0.5, -0.5, -0.5,
         0.5,  0.5, -0.5,
        -0.5, -0.5, -0.5,
         0.5,  0.5, -0.5,
        -0.5,  0.5, -0.5,

         0.5, -0.5,  0.5, 
        -0.5, -0.5,  0.5, 
        -0.5,  0.5,  0.5, 
         0.5, -0.5,  0.5, 
        -0.5,  0.5,  0.5, 
         0.5,  0.5,  0.5,

        -0.5, -0.5,  0.5, 
        -0.5, -0.5, -0.5,
        -0.5,  0.5, -0.5,
        -0.5, -0.5,  0.5,
        -0.5,  0.5, -0.5,
        -0.5,  0.5,  0.5,
         
         0.5, -0.5, -0.5, 
         0.5, -0.5,  0.5, 
         0.5,  0.5,  0.5, 
         0.5, -0.5, -0.5, 
         0.5,  0.5,  0.5, 
         0.5,  0.5, -0.5, 
        
        -0.5, -0.5,  0.5, 
         0.5, -0.5,  0.5,
         0.5, -0.5, -0.5,
        -0.5, -0.5,  0.5,
         0.5, -0.5, -0.5,
        -0.5, -0.5, -0.5,
        
        -0.5,  0.5, -0.5, 
         0.5,  0.5, -0.5, 
         0.5,  0.5,  0.5, 
        -0.5,  0.5, -0.5, 
         0.5,  0.5,  0.5, 
        -0.5,  0.5,  0.5 
    };

    float temp_normals[] = {
         0,  0, -1,
         0,  0,  1,
        -1,  0,  0,
         1,  0,  0,
         0, -1,  0,
         0,  1,  0
    };
    for( int i = 0; i < 6; i++ ){
        for( int j = 0; j < 6; j++ ){
            normals.push_back( temp_normals[3*i] );
            normals.push_back( temp_normals[3*i + 1] );
            normals.push_back( temp_normals[3*i + 2] );
        }
    }
    
    init();
}
